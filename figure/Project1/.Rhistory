g <- g + geom_point()
g <- g + geom_smooth()
g
?t.test
?subset
?tapply
data(ToothGrowth)
ToothGrowth<-transform(ToothGrowth, dose=factor(dose))
ToothGrowth<-transform(ToothGrowth, supp=factor(supp))
summary(ToothGrowth)
with(ToothGrowth, tapply(len, list(dose,supp), mean))
g <- ggplot(ToothGrowth, aes(x = dose, y = len,
colour = supp, group=supp))
g <- g + geom_point()
g <- g + geom_smooth(method="lm")
g
qplot(len, data=ToothGrowth, fill=supp, facets=.~dose,  binwidth    =	2)
OJ=subset(ToothGrowth, supp=="OJ",'len')
VC=subset(ToothGrowth, supp=="VC",'len')
#OJ=x
#VC=y
ttest=t.test(OJ,VC, paired=FALSE, var.equal=FALSE)
ttest
for (ch in levels(ToothGrowth$dose)) print(ch)
?subset
for (ch in levels(ToothGrowth$dose)) {xsubset(ToothGrowth, supp=)
for (ch in levels(ToothGrowth$dose))
{}
for (ch in levels(ToothGrowth$dose))
{
x=subset(ToothGrowth,supp="OJ" & dose = ch, 'len')
for (ch in levels(ToothGrowth$dose))
{
x=subset(ToothGrowth,supp=="OJ" & dose == ch, 'len')
y=subset(ToothGrowth,supp=="VC" & dose == ch, 'len')
ttest=t.test(OJ,VC, paired=FALSE, var.equal=FALSE)
ttest
}
for (ch in levels(ToothGrowth$dose))
{
x=subset(ToothGrowth,supp=="OJ" & dose == ch, 'len')
y=subset(ToothGrowth,supp=="VC" & dose == ch, 'len')
ttest=t.test(OJ,VC, paired=FALSE, var.equal=FALSE)
print(ttest)
}
for (ch in levels(ToothGrowth$dose))
{
x=subset(ToothGrowth,supp=="OJ" & dose == ch, 'len')
y=subset(ToothGrowth,supp=="VC" & dose == ch, 'len')
ttest=t.test(x,y, paired=FALSE, var.equal=FALSE)
print(ttest)
}
?str
toothsummary=with(ToothGrowth, tapply(len, list(dose,supp), summary))
toothsummary
toothsummary[1]
toothsummary=with(ToothGrowth, tapply(len, list(dose,supp), str))
toothsummary
length(x)
x
length(x[1])
x
x[1]
x[,1]
length(x[,1])
toothmeans=with(ToothGrowth, tapply(len, list(dose,supp), mean))
toothsds=with(ToothGrowth, tapply(len, list(dose,supp), sd))
toothns=with(ToothGrowth, tapply(len, list(dose,supp), length))
toothns
toothmeans
toothsds
toothmeans+c(-1,1)*qt(.95,(toothns-1))*toothsds/sqrt(toothns)
blob=toothmeans+c(-1,1)*qt(.95,(toothns-1))*toothsds/sqrt(toothns)
blob
qt(.95,(toothns-1))
qt(.95,(toothns-1))*toothsds/sqrt(toothns)
(qt(.95,(toothns-1))*toothsds/sqrt(toothns))*c(-1,1)
sds<-data.frame(qt(.95,(toothns-1))*toothsds/sqrt(toothns))
sds*c(-1,1)
c(-sds*,sds)
c(-sds,sds)
c(-sds,sds)+toothmeans
toothmeans
c(-sds+toothmeans,sds+toothmeans)
c(-1,1)
[-1,1]
list(-1,1)
c(-1,1)
?c
with(c(-1,1), tapply(len, list(dose,supp)))
with(ToothGrowth, tapply(len, list(dose,supp), c(-1,1)))
toothmeans=with(ToothGrowth, tapply(len, list(dose,supp), mean))
toothsds=with(ToothGrowth, tapply(len, list(dose,supp), sd))
toothns=with(ToothGrowth, tapply(len, list(dose,supp), length))
dim(toothmeans)
blob<-matrix(3,2)
blob[,]<-c(-1,1)
blob
blob[,]=3
blob
blob<-matrix(3,2)
blob[,]=3
blob
blob<-matrix(3,2)
blob
blob=0
blob
blob<-matrix(3,2)
blob
?matrix
matrix(c(-1,1),3,2)
tplus=toothmeans+qt(.95,(toothns-1))*toothsds/sqrt(toothns)
tplus
tminus=toothmeans-qt(.95,(toothns-1))*toothsds/sqrt(toothns)
tminus
print(as.String(tminus)+as.String(tplus))
print(as.String(tminus))
tminus
paste(tminus[1,1],", tplus[1,1])
paste(tminus[1,1],", ",tplus[1,1])
paste(tminus[1,1],", ",tplus[1,1])
paste(tminus[,],", ",tplus[,])
data.frame(paste(tminus[,],", ",tplus[,]))
matrix(paste(tminus[,],", ",tplus[,]))
paste(tminus[,],", ",tplus[,])
x<-paste(tminus[,],", ",tplus[,])
for (i in 1:nrows(tplus)){
print(names(tminus[i]))
}
x<-paste(tminus[,],", ",tplus[,])
> for (i in 1:rows(tplus)){
+ print(names(tminus[i]))
+ }
for (i in 1:rows(tplus)){
print(names(tminus[i]))
}
for (i in 1:nrow(tplus)){
print(names(tminus[i]))
}
names(tminus)
names(tminus[,1])
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
print(names(tplus[i,j]))
}
}
names(tplus[1,1])
names(tplus[,1])
names(tplus[,])
names(tplus[1,])
names(tplus[1,][1])
names(tplus[,1][1])
names(tplus[2,][1])
names(tplus[,2][1])
names(tplus[,][1])
names(tplus[1,][1])
names(tplus[1,][2])
names(tplus[1,][3])
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
print(names(tplus[i,][j]))
}
}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
print(names(tplus[i,][j]))
print(names(tplus[,i][i]))
}
}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
print(names(tplus[i,][j]))
print(names(tplus[,j][i]))
}
}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
paste((names(tplus[i,][j])),names(tplus[,j][i]))
}
}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
x=paste((names(tplus[i,][j])),names(tplus[,j][i]))
print(x)
}
}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
x=paste((names(tplus[i,][j])),names(tplus[,j][i]), tminus[i,j], ",",tplus )
print(x)
}
}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
x=paste((names(tplus[i,][j])),names(tplus[,j][i]), tminus[i,j], ",",tplus[i,j] )
print(x)
}
}
?round
x=subset(ToothGrowth,supp=="OJ" & dose == "ch"2.0, 'len')
x=subset(ToothGrowth,supp=="OJ" & dose == 2, 'len')
x
x=subset(ToothGrowth,supp=="VC" & dose == 2, 'len')
x=subset(ToothGrowth,supp=="OJ" & dose == 2, 'len')
y=subset(ToothGrowth,supp=="VC" & dose == 2, 'len')
x
y
ToothGrowth
subset(ToothGrowth, dose==2)
x
y
subset(ToothGrowth, dose==2)
y
x
ttest=t.test(x,y, paired=FALSE, var.equal=FALSE)
ttest
sd(x)
x
sd(x)
mean(x)
mean(x[,1])
ttest
sd(x[,1])
mean(y[,1])
x
x<-x[,1]
x
y<-y[,1]
mean(x)
length(x)
n=length(x)
xbar=mean(x)
ybar-mean(y)
ybar=mean(y)
xsd=sd(x)
ysd=sd(y)
sp <- sqrt( ((n - 1) * sd(x)^2 + (n-1) * sd(y)^2) / (n + n-2))
sp
md=xbar-ybar
semd <- sp * sqrt(1 / n + 1/n)
rbind(
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
md + c(-1, 1) * qt(.975, n + n - 2) * semd
t.test(x,y,paired=FALSE)
?t.test
t.test(x,y,paired=FALSE, var.equal=FALSE, conf.level=.95)
data(sleep)
head(sleep)
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
```
```{r, echo=TRUE,eval=FALSE}
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
rbind(
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n),
as.vector(t.test(difference)$conf.int),
as.vector(t.test(g2, g1, paired = TRUE)$conf.int),
as.vector(t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)$conf.int)
rbind(
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n),
as.vector(t.test(difference)$conf.int),
as.vector(t.test(g2, g1, paired = TRUE)$conf.int),
as.vector(t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)$conf.int)
)
rbind(
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n),
as.vector(t.test(difference)$conf.int),
as.vector(t.test(g2, g1, paired = TRUE)$conf.int),
as.vector(t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)$conf.int)
)
sp <- sqrt((7 * 15.34^2 + 20 * 18.23^2) / (8 + 21 - 2))
132.86 - 127.44 + c(-1, 1) * qt(.975, 27) * sp * (1 / 8 + 1 / 21)^.5
n1 <- length(g1); n2 <- length(g2)
sp <- sqrt( ((n1 - 1) * sd(g1)^2 + (n2-1) * sd(g2)^2) / (n1 + n2-2))
md <- mean(g2) - mean(g1)
semd <- sp * sqrt(1 / n1 + 1/n2)
rbind(
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd,
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf,
t.test(g2, g1, paired = TRUE)$conf
)
t.test(g2, g1, paired = FALSE, var.equal = TRUE)
t.test(g2, g1, paired = TRUE)
ttest=t.test(OJ,VC, paired=FALSE, var.equal=FALSE)
for (ch in levels(ToothGrowth$dose))
{
x=subset(ToothGrowth,supp=="OJ" & dose == ch, 'len')
y=subset(ToothGrowth,supp=="VC" & dose == ch, 'len')
ttest=t.test(x,y, paired=FALSE, var.equal=FALSE)$conf
print(ch)
print(ttest)
}
---
output: html_document
---
```{r, echo=FALSE}
library(ggplot2)
data(ToothGrowth)
ToothGrowth<-transform(ToothGrowth, dose=factor(dose))
ToothGrowth<-transform(ToothGrowth, supp=factor(supp))
summary(ToothGrowth)
toothmeans=with(ToothGrowth, tapply(len, list(dose,supp), mean))
toothsds=with(ToothGrowth, tapply(len, list(dose,supp), sd))
toothns=with(ToothGrowth, tapply(len, list(dose,supp), length))
tplus=round(toothmeans+qt(.95,(toothns-1))*toothsds/sqrt(toothns),2)
tminus=round(toothmeans-qt(.95,(toothns-1))*toothsds/sqrt(toothns),2)
```
95% confidence intervals
```{r echo=FALSE}
for (i in 1:nrow(tplus))
{
for (j in 1:ncol(tplus))
{
x=paste((names(tplus[i,][j])),names(tplus[,j][i]), tminus[i,j], ",",tplus[i,j] )
print((x))
}
}
g <- ggplot(ToothGrowth, aes(x = dose, y = len,
colour = supp, group=supp))
g <- g + geom_point()
g <- g + geom_smooth(method="lm")
g
qplot(len, data=ToothGrowth, fill=supp, facets=.~dose,  binwidth  =	2)
OJ=subset(ToothGrowth, supp=="OJ",'len')
VC=subset(ToothGrowth, supp=="VC",'len')
#OJ=x
#VC=y
ttest=t.test(OJ,VC, paired=FALSE, var.equal=FALSE)
for (ch in levels(ToothGrowth$dose))
{
x=subset(ToothGrowth,supp=="OJ" & dose == ch, 'len')
y=subset(ToothGrowth,supp=="VC" & dose == ch, 'len')
ttest=t.test(x,y, paired=FALSE, var.equal=FALSE)$conf
print(ch)
print(ttest)
}
ttest
ttest[,1]
ttest[1,]
ttest[1]
ttest[2]
ttest$conf
names(ttest)
qplot(len, data=ToothGrowth, fill=supp, facets=.~dose,  binwidth  =	2)
#Plot 4
#set working directory to that which contains the data file
#plot is saved as .png
plotme<-function()
{
#Get Data
EPC<-mydata <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings="?")
sub1<-subset(EPC,Date=="1/2/2007"|Date=="2/2/2007", stringsAsFactors = FALSE)
#Set up 4 plots on one device
par(mfrow=c(2,2))
par(mar=c(4,4,4,4))
#plot topleft Global Active Power
t=as.POSIXct(paste(sub1[,1], sub1[,2]), format="%d/%m/%Y %H:%M:%S")
G=sub1[,"Global_active_power"]
plot(t,G, type="l", xlab="",ylab="Global Active Power (kilowatts)")
#plot topright Voltage
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
#plot bottomleft energy submetering
s1=sub1[,"Sub_metering_1"]
s2=sub1[,"Sub_metering_2"]
s3=sub1[,"Sub_metering_3"]
plot(t,s1, type="l", xlab="",ylab="Energy sub metering", col="black" )
lines(t,s2, col="red")
lines(t,s3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), cex=.5, lty=c(1,1), col = c("black", "red", "blue"))
#bottomright Global Reactive Power
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
}
png(filename="Plot4.png", width = 1480, height = 1480)
plotme()
dev.off()
setwd("C:/Users/Eric/Desktop/Learning/R/Exploratory Analysis")
#Plot 4
#set working directory to that which contains the data file
#plot is saved as .png
plotme<-function()
{
#Get Data
EPC<-mydata <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings="?")
sub1<-subset(EPC,Date=="1/2/2007"|Date=="2/2/2007", stringsAsFactors = FALSE)
#Set up 4 plots on one device
par(mfrow=c(2,2))
par(mar=c(4,4,4,4))
#plot topleft Global Active Power
t=as.POSIXct(paste(sub1[,1], sub1[,2]), format="%d/%m/%Y %H:%M:%S")
G=sub1[,"Global_active_power"]
plot(t,G, type="l", xlab="",ylab="Global Active Power (kilowatts)")
#plot topright Voltage
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
#plot bottomleft energy submetering
s1=sub1[,"Sub_metering_1"]
s2=sub1[,"Sub_metering_2"]
s3=sub1[,"Sub_metering_3"]
plot(t,s1, type="l", xlab="",ylab="Energy sub metering", col="black" )
lines(t,s2, col="red")
lines(t,s3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), cex=.5, lty=c(1,1), col = c("black", "red", "blue"))
#bottomright Global Reactive Power
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
}
png(filename="Plot4.png", width = 1480, height = 1480)
plotme()
dev.off()
plotme()
getwd()
plotme<-function()
{
#Get Data
EPC<-mydata <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings="?")
sub1<-subset(EPC,Date=="1/2/2007"|Date=="2/2/2007", stringsAsFactors = FALSE)
#Set up 4 plots on one device
par(mfrow=c(2,2))
par(mar=c(4,4,4,4))
#plot topleft Global Active Power
t=as.POSIXct(paste(sub1[,1], sub1[,2]), format="%d/%m/%Y %H:%M:%S")
G=sub1[,"Global_active_power"]
plot(t,G, type="l", xlab="",ylab="Global Active Power (kilowatts)")
#plot topright Voltage
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
#plot bottomleft energy submetering
s1=sub1[,"Sub_metering_1"]
s2=sub1[,"Sub_metering_2"]
s3=sub1[,"Sub_metering_3"]
plot(t,s1, type="l", xlab="",ylab="Energy sub metering", col="black" )
lines(t,s2, col="red")
lines(t,s3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), cex=.5, lty=c(1,1), col = c("black", "red", "blue"))
#bottomright Global Reactive Power
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
}
plotme<-function()
{
#Get Data
EPC<-mydata <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings="?")
sub1<-subset(EPC,Date=="1/2/2007"|Date=="2/2/2007", stringsAsFactors = FALSE)
#Set up 4 plots on one device
par(mfrow=c(2,2))
par(mar=c(4,4,4,4))
#plot topleft Global Active Power
t=as.POSIXct(paste(sub1[,1], sub1[,2]), format="%d/%m/%Y %H:%M:%S")
G=sub1[,"Global_active_power"]
plot(t,G, type="l", xlab="",ylab="Global Active Power (kilowatts)")
#plot topright Voltage
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
#plot bottomleft energy submetering
s1=sub1[,"Sub_metering_1"]
s2=sub1[,"Sub_metering_2"]
s3=sub1[,"Sub_metering_3"]
plot(t,s1, type="l", xlab="",ylab="Energy sub metering", col="black" )
lines(t,s2, col="red")
lines(t,s3, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), cex=.5, lty=c(1,1), col = c("black", "red", "blue"))
#bottomright Global Reactive Power
V=sub1[,"Voltage"]
plot(t,V, type="l", xlab="date time",ylab="Voltage", col="black")
}
plotme()
setwd("C:/Users/Eric/Desktop/Learning/R/Exploratory Analysis/ExData_Plotting1")
plotme()
png(filename="Plot4.png", width = 1480, height = 1480)
plotme()
dev.off()
png(filename="Plot4.png", width = 1000, height = 1000)
plotme()
dev.off()
png(filename="Plot4.png", width = 1000, height = 1000)
plotme()
dev.off()
png(filename="Plot4.png", width = 1000, height = 1000)
plotme()
dev.off()
png(filename="Plot4.png", width = 1000, height = 1000)
plotme()
dev.off()
png(filename="Plot4.png", width = 1000, height = 1000)
plotme()
dev.off()
png(filename="Plot4.png", width = 1000, height = 1000)
plotme()
dev.off()
